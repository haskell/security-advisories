{"affected":[{"package":{"ecosystem":"Hackage","name":"git-annex"},"ranges":[{"events":[{"introduced":"0.1"},{"fixed":"6.20170818"}],"type":"ECOSYSTEM"}],"severity":[{"score":"CVSS_V3","type":"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"}]}],"aliases":["CVE-2017-12976"],"details":"# *git-annex* command injection via malicious SSH hostname\n\n*git-annex* was vulnerable to the same class of security hole as\ngit's **CVE-2017-1000117**. In several cases, `git-annex` parses a\nrepository URL, and uses it to generate a `ssh` command, with the\nhostname to ssh to coming from the URL. If the hostname it parses is\nsomething like `-eProxyCommand=evil`, this could result in arbitrary\nlocal code execution.\n\nSome details of URL parsing may prevent the exploit working in some\ncases.\n\nExploiting this would involve the attacker tricking the victim into\nadding a remote something like `ssh://-eProxyCommand=evil/blah`.\n\nOne possible avenue for an attacker that avoids exposing the URL to\nthe user is to use `initremote` with an SSH remote, so embedding the\nURL in the *git-annex* branch. Then the victim would enable it with\n`enableremote`.\n\nThis was fixed in version **6.20170818**. Now there's a `SshHost`\ntype that is not allowed to start with a dash, and every invocation\nof `git-annex` uses a function that takes a `SshHost`.\n","id":"HSEC-2023-0009","modified":"2023-07-25T13:25:42Z","published":"2023-07-25T13:25:42Z","references":[{"type":"ADVISORY","url":"https://git-annex.branchable.com/security/CVE-2017-12976/"},{"type":"FIX","url":"http://source.git-annex.branchable.com/?p=source.git;a=commitdiff;h=df11e54788b254efebb4898b474de11ae8d3b471"}],"related":["CVE-2017-9800","CVE-2017-12836","CVE-2017-1000116","CVE-2017-1000117"],"schema_version":"1.5.0","summary":"git-annex command injection via malicious SSH hostname"}

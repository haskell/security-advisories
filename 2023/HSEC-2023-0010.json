{"affected":[{"package":{"ecosystem":"Hackage","name":"git-annex"},"ranges":[{"events":[{"introduced":"0"},{"fixed":"6.20180626"}],"type":"ECOSYSTEM"}],"severity":[{"score":"CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N","type":"CVSS_V3"}]}],"aliases":["CVE-2018-10857"],"details":"# *git-annex* private data exfiltration to compromised remote\n\nSome uses of git-annex were vulnerable to a private data exposure\nand exfiltration attack. It could expose the content of files\nlocated outside the *git-annex* repository, or content from a\nprivate web server on localhost or the LAN.  Joey Hess discovered\nthis attack.\n\nTo perform this attack, the attacker needs to have control over one\nof the remotes of the victim's *git-annex* repository. For example,\nthey may provide a public *git-annex* repository that the victim\nclones. Or, equivalantly, the attacker could have read access to the\nvictim's *git-annex* repository or a repository it pushes to, and\nsome channel to get commits into it (e.g. pull requests).\n\nThese exploits are most likely to succeed when the victim is running\nthe `git-annex` assistant, or is periodically running `git annex\nsync --content`.\n\nTo perform the attack the attacker runs `git-annex addurl --relaxed\nfile:///etc/passwd` and commits this to the repository in some out\nof the way place.  After the victim's git repository receives that\nchange, `git-annex` follows the attacker-provided URL to the private\ndata, which it stores in the *git-annex* repository.  From there it\ntransfers the content to the remote *git-annex* repository that the\nattacker has access to.\n\nAs well as `file:///` URLs, the attacker can use URLs to private web\nservers.  The URL can also be one that the attacker controls, that\nredirects to a URL that is accessible to the victim system (and not\nnecessarily the compromised remote).\n\n## Fix\n\nThe issue was fixed by making `git-annex` refuse to follow\n`file:///` urls and URLs pointing to private/local IP addresses by\ndefault.  Two new configuration settings,\n`annex.security.allowed-url-schemes` and\n`annex.security.allowed-ip-addresses`, can relax this security\npolicy, and are intended for cases where the *git-annex* repository\nis kept private and so the attack does not apply.\n\n## Impact on external special remotes\n\nOne variant of this issue can exploit a vulnerable external special\nremote, and could not be prevented by `git-annex`.  (`git-annex`'s\nown built-in special remotes are not vulnerable to this attack.)\n\nIn this attack variant, the attacker guesses the hash of a file\nstored on the victim's private web server, and adds it to the\n`git-annex` repository.  The attacker also has control of the server\nhosting an encrypted special remote used by the victim's *git-annex*\nrepository.  They cause that server to redirect to the victim's web\nserver.  This allows the attacker to verify if the victim's web\nserver contains a file that the attacker already knows the content\nof, assuming they can guess the URL to it.\n\nDevelopers of external special remotes are encouraged to prevent\nthis attack by not following such HTTP redirects.\n","id":"HSEC-2023-0010","modified":"2023-07-25T13:25:42Z","published":"2023-07-25T13:25:42Z","references":[{"type":"ADVISORY","url":"https://git-annex.branchable.com/security/CVE-2018-10857_and_CVE-2018-10859/"}],"schema_version":"1.5.0","summary":"git-annex private data exfiltration to compromised remote"}
